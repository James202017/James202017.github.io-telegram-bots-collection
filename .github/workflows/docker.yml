name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/dmitry-realtor-bots
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push main Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
    
    - name: Build and push individual bot images
      run: |
        # Создаем отдельные Dockerfile для каждого бота
        for bot in BOT_P BOT_PR BOT_Inv BOT_Str BOT_Ocenka; do
          cat > Dockerfile.$bot << EOF
        FROM python:3.11-slim
        
        RUN apt-get update && apt-get install -y \\
            gcc \\
            libffi-dev \\
            libssl-dev \\
            && rm -rf /var/lib/apt/lists/*
        
        WORKDIR /app
        
        COPY requirements.txt .
        RUN pip install --no-cache-dir -r requirements.txt
        
        COPY . .
        
        CMD ["python", "$bot.py"]
        EOF
          
          docker build -f Dockerfile.$bot -t ${{ secrets.DOCKERHUB_USERNAME }}/dmitry-$bot:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dmitry-$bot:latest
        done
