import logging
import asyncio
import sys
import os
from datetime import datetime
from dotenv import load_dotenv

try:
    import ssl
except ModuleNotFoundError:
    ssl = None
    logging.error("–ú–æ–¥—É–ª—å SSL –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ OpenSSL –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ.")

from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton, InputFile, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_filename = f'bot_{datetime.now().strftime("%Y%m%d")}.log'
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(log_filename, encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv('BOT_TOKEN_INV')
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not API_TOKEN:
    raise ValueError("BOT_TOKEN_INV –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
if not ADMIN_CHAT_ID:
    raise ValueError("ADMIN_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")

try:
    ADMIN_CHAT_ID = int(ADMIN_CHAT_ID)
except ValueError:
    raise ValueError("ADMIN_CHAT_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL
if ssl is None:
    sys.exit("–û—à–∏–±–∫–∞: –ú–æ–¥—É–ª—å SSL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenSSL –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ä–µ–¥—É —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π SSL.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

class InvestForm(StatesGroup):
    direction = State()
    amount = State()
    term = State()
    comment = State()
    contact = State()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_invest_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(KeyboardButton("üè¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å"))
    keyboard.add(KeyboardButton("üè† –ñ–∏–ª–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å"))
    keyboard.add(KeyboardButton("üèóÔ∏è –ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏"))
    keyboard.add(KeyboardButton("üåç –ó–∞—Ä—É–±–µ–∂–Ω–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å"))
    keyboard.add(KeyboardButton("üíº –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–æ–Ω–¥—ã"))
    return keyboard

def get_amount_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —ç—Ç–∞–ø–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(KeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è"))
    keyboard.add(KeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"))
    return keyboard

def get_term_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —ç—Ç–∞–ø–∞ –≤–≤–æ–¥–∞ —Å—Ä–æ–∫–∞"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(KeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–µ"))
    keyboard.add(KeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"))
    return keyboard

def get_comment_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —ç—Ç–∞–ø–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(KeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ —Å—Ä–æ–∫—É"))
    keyboard.add(KeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"))
    return keyboard

def get_contact_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —ç—Ç–∞–ø–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(KeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é"))
    keyboard.add(KeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"))
    return keyboard

# –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–ø—Ü–∏–π
VALID_OPTIONS = [
    "üèóÔ∏è 1. –ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏ (–¥–æ—Ö–æ–¥ –¥–æ 3 –º–ª–Ω —Ä—É–± –∏ –≤—ã—à–µ)",
    "üåç 2. –ó–∞—Ä—É–±–µ–∂–Ω–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å",
    "üíé 3. –í—ã–∫—É–ø –ª–æ—Ç–æ–≤ –Ω–∏–∂–µ —Ä—ã–Ω–∫–∞",
    "üí∞ 4. –í–∫–ª–∞–¥—ã –ø–æ–¥ 29% –≥–æ–¥–æ–≤—ã—Ö"
]

# –¢–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π
WELCOME_MESSAGE = (
    "<b>üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –≤—ã–≥–æ–¥–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π!</b>\n\n"
    "üíº –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ —É–º–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–º—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!\n\n"
    "üöÄ <b>–ù–∞—à–∏ —Ç–æ–ø-–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n"
    "üåç –ó–∞—Ä—É–±–µ–∂–Ω–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\n"
    "üí∞ –í–∫–ª–∞–¥—ã –ø–æ–¥ 29% –≥–æ–¥–æ–≤—ã—Ö\n"
    "üìà –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç 100,000‚ÇΩ/–º–µ—Å—è—Ü\n\n"
    "‚ú® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω—è–π—Ç–µ –≤—Å–µ –ø–æ–ª—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ, "
    "—á—Ç–æ–±—ã –Ω–∞—à–∏ <b>—ç–∫—Å–ø–µ—Ä—Ç—ã-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã</b> –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ! üéØ"
)

RECOMMENDATIONS = (
    "üìã <b>–í–∞–∂–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –∑–∞—è–≤–∫–∏:</b>\n\n"
    "‚úÖ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –º–∞–∫—Å–∏–º—É–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–∏—Ö —Ü–µ–ª—è—Ö\n"
    "üìù –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è\n"
    "üéØ –ú—ã –ø–æ–¥–±–µ—Ä–µ–º <b>–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ</b> –≤—ã–≥–æ–¥–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ\n"
    "‚ö° –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2-—Ö —á–∞—Å–æ–≤\n"
    "üîí –ü–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n\n"
    "üí° <i>–ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –Ω–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!</i>"
)

def format_amount(amount: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—É–º–º—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    try:
        num = float(amount.replace(' ', '').replace(',', '.'))
        return f"{num:,.2f}".replace(',', ' ').replace('.', ',')
    except ValueError:
        return amount

@dp.message(Command('start'))
async def start(message: types.Message, state: FSMContext):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä start –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        start_param = message.get_args() if hasattr(message, 'get_args') else ''
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º: {start_param}")
        
        # –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–µ–π —É—Å–ª—É–≥
        enhanced_welcome = (
            f"üí∞ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!</b>\n\n"
            "üìà <b>–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å - –≤–∞—à –ø—É—Ç—å –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥–µ</b>\n\n"
            "üéØ <b>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
            "‚Ä¢ üíé –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –æ—Ç 12% –≥–æ–¥–æ–≤—ã—Ö\n"
            "‚Ä¢ üõ°Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏ –∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏\n"
            "‚Ä¢ üìä –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞\n"
            "‚Ä¢ üèóÔ∏è –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∏ –∏ –ø—Ä–æ–µ–∫—Ç—ã\n"
            "‚Ä¢ üíº –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ\n"
            "‚Ä¢ üìã –ü–æ–ª–Ω–∞—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        )
        
        # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        if start_param == 'investicii':
            welcome_msg = "üéØ <b>–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–µ—Ä–µ—à–ª–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –Ω–∞ —Å–∞–π—Ç–µ!</b>\n\n" + enhanced_welcome + WELCOME_MESSAGE
        else:
            welcome_msg = enhanced_welcome + WELCOME_MESSAGE
            
        await message.answer(welcome_msg)
        await message.answer(RECOMMENDATIONS)
        await state.set_state(InvestForm.direction)
        await message.answer("üöÄ <b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:</b>", reply_markup=get_invest_keyboard())
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ start: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@dp.message(F.text.in_(["üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "üîô –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–µ", "üîô –ù–∞–∑–∞–¥ –∫ —Å—Ä–æ–∫—É", "üîô –ù–∞–∑–∞–¥ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é", "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"]))
async def navigation_handler(message: types.Message, state: FSMContext):
    try:
        if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
            await state.set_state(InvestForm.direction)
            await message.answer(
                "üîÑ <b>–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ!</b>\n\nüöÄ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:",
                reply_markup=get_invest_keyboard()
            )
        elif message.text == "üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è":
            await state.set_state(InvestForm.direction)
            await message.answer(
                "üöÄ <b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:</b>",
                reply_markup=get_invest_keyboard()
            )
        elif message.text == "üîô –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–µ":
            await state.set_state(InvestForm.amount)
            await message.answer(
                "üí∞ <b>–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—É–º–º—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:</b>\n\nüí° <i>–ù–∞–ø—Ä–∏–º–µ—Ä: 500000, 1000000, 5000000</i>",
                reply_markup=get_amount_keyboard()
            )
        elif message.text == "üîô –ù–∞–∑–∞–¥ –∫ —Å—Ä–æ–∫—É":
            await state.set_state(InvestForm.term)
            await message.answer(
                "‚è∞ <b>–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Å—Ä–æ–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:</b>\n\nüìÖ –ù–∞–ø—Ä–∏–º–µ—Ä: 1 –≥–æ–¥, 2 –≥–æ–¥–∞, 5 –ª–µ—Ç\nüí° –ß–µ–º –¥–æ–ª—å—à–µ —Å—Ä–æ–∫ - —Ç–µ–º –≤—ã—à–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å",
                reply_markup=get_term_keyboard()
            )
        elif message.text == "üîô –ù–∞–∑–∞–¥ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é":
            await state.set_state(InvestForm.comment)
            await message.answer(
                "üí≠ <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b>\n\n‚ú® –ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–æ–µ–∫—Ç—É?\nüéØ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –ª–æ–∫–∞—Ü–∏–∏?\n‚ùì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã?",
                reply_markup=get_comment_keyboard()
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@dp.message(InvestForm.direction)
async def process_direction(message: types.Message, state: FSMContext):
    try:
        direction_options = [
            "üè¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å",
            "üè† –ñ–∏–ª–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", 
            "üèóÔ∏è –ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏",
            "üåç –ó–∞—Ä—É–±–µ–∂–Ω–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å",
            "üíº –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–æ–Ω–¥—ã"
        ]
        
        if message.text not in direction_options:
            await message.answer(
                "‚ùó–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞.",
                reply_markup=get_invest_keyboard()
            )
            return
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–±—Ä–∞–ª –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {message.text}")
        await state.update_data(direction=message.text)
        await state.set_state(InvestForm.amount)
        await message.answer(
            "üí∞ <b>–û—Ç–ª–∏—á–Ω–æ!</b> –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—É–º–º—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:\n\n"
            "üí° <i>–ù–∞–ø—Ä–∏–º–µ—Ä: 500000, 1000000, 5000000</i>",
            reply_markup=get_amount_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@dp.message(InvestForm.amount)
async def process_amount(message: types.Message, state: FSMContext):
    try:
        if not message.text.strip():
            await message.answer("‚ùó–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        try:
            amount = float(message.text.replace(' ', '').replace(',', '.'))
            if amount <= 0:
                raise ValueError
            formatted_amount = format_amount(message.text)
        except ValueError:
            await message.answer("‚ùó–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É —á–∏—Å–ª–æ–º.")
            return
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} —É–∫–∞–∑–∞–ª —Å—É–º–º—É: {formatted_amount}")
        await state.update_data(amount=formatted_amount)
        await state.set_state(InvestForm.term)
        await message.answer(
            "‚è∞ <b>–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Å—Ä–æ–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:</b>\n\nüìÖ –ù–∞–ø—Ä–∏–º–µ—Ä: 1 –≥–æ–¥, 2 –≥–æ–¥–∞, 5 –ª–µ—Ç\nüí° –ß–µ–º –¥–æ–ª—å—à–µ —Å—Ä–æ–∫ - —Ç–µ–º –≤—ã—à–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å",
            reply_markup=get_term_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—É–º–º—ã: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@dp.message(InvestForm.term)
async def process_term(message: types.Message, state: FSMContext):
    try:
        if not message.text.strip():
            await message.answer("‚ùó–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Ä–æ–∫.")
            return
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} —É–∫–∞–∑–∞–ª —Å—Ä–æ–∫: {message.text}")
        await state.update_data(term=message.text)
        await state.set_state(InvestForm.comment)
        await message.answer(
            "üí≠ <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b>\n\n‚ú® –ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–æ–µ–∫—Ç—É?\nüéØ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –ª–æ–∫–∞—Ü–∏–∏?\n‚ùì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã?",
            reply_markup=get_comment_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ä–æ–∫–∞: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@dp.message(InvestForm.comment)
async def process_comment(message: types.Message, state: FSMContext):
    try:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –¥–æ–±–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
        await state.update_data(comment=message.text)
        await state.set_state(InvestForm.contact)
        
        await message.answer(
            "üìû <b>–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ!</b> –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:\n\n"
            "üë§ <i>–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤, +7 (999) 123-45-67</i>\n\n"
            "üîí –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏!",
            reply_markup=get_contact_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")









@dp.message(InvestForm.contact)
async def process_contact(message: types.Message, state: FSMContext):
    try:
        if not message.text.strip():
            await message.answer("‚ùó–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.")
            return
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        await state.update_data(contact=message.text)
        data = await state.get_data()

        summary = (
            f"üí∞ <b>üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:</b>\n\n"
            f"üéØ <b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b> {data.get('direction')}\n"
            f"üíµ <b>–°—É–º–º–∞:</b> {data.get('amount')}\n"
            f"‚è∞ <b>–°—Ä–æ–∫:</b> {data.get('term')}\n"
            f"üí≠ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data.get('comment')}\n"
            f"üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> {data.get('contact')}\n\n"
            f"üë§ –û—Ç: {message.from_user.full_name} (ID: {message.from_user.id})\n"
            f"üïí –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )

        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=summary)
        await message.answer(
            "‚úÖ <b>–û—Ç–ª–∏—á–Ω–æ! –í–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!</b>\n\n"
            "üéØ –ù–∞—à –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç\n"
            "üìä –ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–æ–≤\n"
            "üíé –ü–æ–∫–∞–∂–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –æ—Ç 12% –≥–æ–¥–æ–≤—ã—Ö\n"
            "üìã –ü—Ä–æ–≤–µ–¥–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n\n"
            "üí∞ <i>–í–∞—à–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ - –Ω–∞—à–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å!</i>",
            reply_markup=get_invest_keyboard()
        )
        await state.clear()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def main():
    try:
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        await dp.start_polling(bot, skip_updates=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
        sys.exit(1)

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise
