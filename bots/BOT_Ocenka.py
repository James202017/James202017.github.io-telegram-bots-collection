import logging
import asyncio
import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InputFile
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command
from dotenv import load_dotenv

load_dotenv()
API_TOKEN = os.getenv('BOT_TOKEN_OCENKA')
ADMIN_CHAT_ID = int(os.getenv('ADMIN_CHAT_ID'))

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

class AppraisalForm(StatesGroup):
    object_type = State()
    purpose = State()
    region = State()
    area = State()
    comment = State()
    contact = State()

def get_object_keyboard():
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="1. –ö–≤–∞—Ä—Ç–∏—Ä–∞"), KeyboardButton(text="2. –î–æ–º")],
        [KeyboardButton(text="3. –ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫"), KeyboardButton(text="4. –ö–æ–º–º–µ—Ä—Ü–∏—è")],
        [KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_purpose_keyboard():
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–î–ª—è –∏–ø–æ—Ç–µ–∫–∏ –∏–ª–∏ –∫—Ä–µ–¥–∏—Ç–∞")],
        [KeyboardButton(text="–î–ª—è —Å—É–¥–µ–±–Ω–æ–≥–æ —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–∞")],
        [KeyboardButton(text="–î–ª—è —Å–¥–µ–ª–∫–∏ –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏")],
        [KeyboardButton(text="–î–ª—è –Ω–∞—Å–ª–µ–¥—Å—Ç–≤–∞ –∏–ª–∏ –¥–∞—Ä–µ–Ω–∏—è")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ–±—ä–µ–∫—Ç–∞"), KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_region_keyboard():
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –∫ —Ü–µ–ª–∏ –æ—Ü–µ–Ω–∫–∏"), KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_area_keyboard():
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é"), KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_comment_keyboard():
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –ø–ª–æ—â–∞–¥–∏"), KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_contact_keyboard():
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é"), KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

@dp.message(Command('start'))
async def start(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä start –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    start_param = message.text.split()[1] if len(message.text.split()) > 1 else ''
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    if start_param == 'ocenka':
        welcome_msg = (
            "üìä **–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–µ—Ä–µ—à–ª–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –æ—Ü–µ–Ω–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ!**\n\n"
            "üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ª—É–∂–±—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏!**\n\n"
            "üè¢ **–ù–∞—à–∏ —É—Å–ª—É–≥–∏ –æ—Ü–µ–Ω–∫–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:**\n"
            "‚Ä¢ –ö–≤–∞—Ä—Ç–∏—Ä—ã –∏ –¥–æ–º–∞\n"
            "‚Ä¢ –ó–µ–º–µ–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏\n"
            "‚Ä¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\n"
            "‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã\n\n"
            "‚ö° **–í–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**\n"
            "‚Ä¢ –û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤ –∑–∞ 1 —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å\n"
            "‚Ä¢ –ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–µ –æ—Ü–µ–Ω—â–∏–∫–∏\n"
            "‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤—Å–µ–º–∏ –±–∞–Ω–∫–∞–º–∏ –∏ —Å—É–¥–∞–º–∏\n"
            "‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –í—ã–µ–∑–¥ –æ—Ü–µ–Ω—â–∏–∫–∞ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è\n\n"
            "üìã **–î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω–∞ –æ—Ü–µ–Ω–∫–∞:**\n"
            "‚Ä¢ –ò–ø–æ—Ç–µ–∫–∞ –∏ –∫—Ä–µ–¥–∏—Ç—ã\n"
            "‚Ä¢ –°—É–¥–µ–±–Ω—ã–µ —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–∞\n"
            "‚Ä¢ –°–¥–µ–ª–∫–∏ –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏\n"
            "‚Ä¢ –ù–∞—Å–ª–µ–¥—Å—Ç–≤–æ –∏ –¥–∞—Ä–µ–Ω–∏–µ\n\n"
            "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, –∏ –Ω–∞—à —ç–∫—Å–ø–µ—Ä—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏!"
        )
    else:
        welcome_msg = (
            "üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ª—É–∂–±—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏!**\n\n"
            "üè¢ **–ù–∞—à–∏ —É—Å–ª—É–≥–∏ –æ—Ü–µ–Ω–∫–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:**\n"
            "‚Ä¢ –ö–≤–∞—Ä—Ç–∏—Ä—ã –∏ –¥–æ–º–∞\n"
            "‚Ä¢ –ó–µ–º–µ–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏\n"
            "‚Ä¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\n"
            "‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã\n\n"
            "‚ö° **–í–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**\n"
            "‚Ä¢ –û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤ –∑–∞ 1 —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å\n"
            "‚Ä¢ –ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–µ –æ—Ü–µ–Ω—â–∏–∫–∏\n"
            "‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤—Å–µ–º–∏ –±–∞–Ω–∫–∞–º–∏ –∏ —Å—É–¥–∞–º–∏\n"
            "‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –í—ã–µ–∑–¥ –æ—Ü–µ–Ω—â–∏–∫–∞ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è\n\n"
            "üìã **–î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω–∞ –æ—Ü–µ–Ω–∫–∞:**\n"
            "‚Ä¢ –ò–ø–æ—Ç–µ–∫–∞ –∏ –∫—Ä–µ–¥–∏—Ç—ã\n"
            "‚Ä¢ –°—É–¥–µ–±–Ω—ã–µ —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–∞\n"
            "‚Ä¢ –°–¥–µ–ª–∫–∏ –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏\n"
            "‚Ä¢ –ù–∞—Å–ª–µ–¥—Å—Ç–≤–æ –∏ –¥–∞—Ä–µ–Ω–∏–µ\n\n"
            "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, –∏ –Ω–∞—à —ç–∫—Å–ø–µ—Ä—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏!"
        )
    
    await message.answer(welcome_msg)
    await message.answer(
        "üéØ **–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏:**\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=get_object_keyboard()
    )
    await state.set_state(AppraisalForm.object_type)

@dp.message(F.text.in_([
    "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ–±—ä–µ–∫—Ç–∞", "–ù–∞–∑–∞–¥ –∫ —Ü–µ–ª–∏ –æ—Ü–µ–Ω–∫–∏", 
    "–ù–∞–∑–∞–¥ –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é", "–ù–∞–∑–∞–¥ –∫ –ø–ª–æ—â–∞–¥–∏", "–ù–∞–∑–∞–¥ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é"
]))
async def navigation_handler(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await state.set_state(AppraisalForm.object_type)
        await message.answer(
            "üîÑ **–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ!**\n\n"
            "üéØ **–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏:**",
            reply_markup=get_object_keyboard()
        )
    elif message.text == "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ–±—ä–µ–∫—Ç–∞":
        await state.set_state(AppraisalForm.object_type)
        await message.answer(
            "üéØ **–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏:**",
            reply_markup=get_object_keyboard()
        )
    elif message.text == "–ù–∞–∑–∞–¥ –∫ —Ü–µ–ª–∏ –æ—Ü–µ–Ω–∫–∏":
        await state.set_state(AppraisalForm.purpose)
        await message.answer(
            "üéØ **–£–∫–∞–∂–∏—Ç–µ —Ü–µ–ª—å –æ—Ü–µ–Ω–∫–∏:**",
            reply_markup=get_purpose_keyboard()
        )
    elif message.text == "–ù–∞–∑–∞–¥ –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é":
        await state.set_state(AppraisalForm.region)
        await message.answer(
            "üåç **–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞:**",
            reply_markup=get_region_keyboard()
        )
    elif message.text == "–ù–∞–∑–∞–¥ –∫ –ø–ª–æ—â–∞–¥–∏":
        await state.set_state(AppraisalForm.area)
        await message.answer(
            "üìê **–£–∫–∞–∂–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –æ–±—ä–µ–∫—Ç–∞:**",
            reply_markup=get_area_keyboard()
        )
    elif message.text == "–ù–∞–∑–∞–¥ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é":
        await state.set_state(AppraisalForm.comment)
        await message.answer(
            "üìù **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**",
            reply_markup=get_comment_keyboard()
        )

@dp.message(AppraisalForm.object_type)
async def handle_object(message: types.Message, state: FSMContext):
    object_options = [
        "üè† –ö–≤–∞—Ä—Ç–∏—Ä–∞", "üè° –î–æ–º/–∫–æ—Ç—Ç–µ–¥–∂", "üåæ –ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫",
        "üè¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", "üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç"
    ]
    if message.text not in object_options:
        await message.answer("‚ùó–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞.", reply_markup=get_object_keyboard())
        return
    await state.update_data(object_type=message.text)
    await state.set_state(AppraisalForm.purpose)
    await message.answer(
        "üéØ <b>–£–∫–∞–∂–∏—Ç–µ —Ü–µ–ª—å –æ—Ü–µ–Ω–∫–∏</b>\n\n"
        "üìã –í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ —Ü–µ–ª—å:\n"
        "‚Ä¢ –î–ª—è –∏–ø–æ—Ç–µ–∫–∏ –∏–ª–∏ –∫—Ä–µ–¥–∏—Ç–∞\n"
        "‚Ä¢ –î–ª—è —Å—É–¥–µ–±–Ω–æ–≥–æ —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–∞\n"
        "‚Ä¢ –î–ª—è —Å–¥–µ–ª–∫–∏ –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏\n"
        "‚Ä¢ –î–ª—è –Ω–∞—Å–ª–µ–¥—Å—Ç–≤–∞ –∏–ª–∏ –¥–∞—Ä–µ–Ω–∏—è\n"
        "‚Ä¢ –î–ª—è —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –î—Ä—É–≥–∞—è —Ü–µ–ª—å (—É–∫–∞–∂–∏—Ç–µ –∫–∞–∫–∞—è)",
        reply_markup=get_purpose_keyboard()
    )

@dp.message(AppraisalForm.purpose)
async def handle_purpose(message: types.Message, state: FSMContext):
    await state.update_data(purpose=message.text)
    await state.set_state(AppraisalForm.region)
    await message.answer(
        "üåç <b>–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞</b>\n\n"
        "üìç –£–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ:\n"
        "‚Ä¢ –†–µ–≥–∏–æ–Ω/–æ–±–ª–∞—Å—Ç—å\n"
        "‚Ä¢ –ì–æ—Ä–æ–¥/–Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç\n"
        "‚Ä¢ –£–ª–∏—Ü–∞ –∏ –Ω–æ–º–µ—Ä –¥–æ–º–∞\n"
        "‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã\n\n"
        "üìù –ü—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, –≥. –ü–æ–¥–æ–ª—å—Å–∫, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 15",
        reply_markup=get_region_keyboard()
    )

@dp.message(AppraisalForm.region)
async def handle_region(message: types.Message, state: FSMContext):
    await state.update_data(region=message.text)
    await state.set_state(AppraisalForm.area)
    await message.answer(
        "üìê <b>–£–∫–∞–∂–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –æ–±—ä–µ–∫—Ç–∞</b>\n\n"
        "üìè –£–∫–∞–∂–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–µ—Ç—Ä–∞—Ö:\n"
        "‚Ä¢ –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å\n"
        "‚Ä¢ –ñ–∏–ª–∞—è –ø–ª–æ—â–∞–¥—å (–¥–ª—è –∫–≤–∞—Ä—Ç–∏—Ä/–¥–æ–º–æ–≤)\n"
        "‚Ä¢ –ü–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞ (–¥–ª—è –∑–µ–º–ª–∏)\n\n"
        "üìù –ü—Ä–∏–º–µ—Ä: 65 –º¬≤ –æ–±—â–∞—è, 45 –º¬≤ –∂–∏–ª–∞—è",
        reply_markup=get_area_keyboard()
    )

@dp.message(AppraisalForm.area)
async def handle_area(message: types.Message, state: FSMContext):
    await state.update_data(area=message.text)
    await state.set_state(AppraisalForm.comment)
    await message.answer(
        "üìù <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n\n"
        "üí¨ –£–∫–∞–∂–∏—Ç–µ –µ—Å–ª–∏ –µ—Å—Ç—å:\n"
        "‚Ä¢ –ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏\n"
        "‚Ä¢ –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞\n"
        "‚Ä¢ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏\n"
        "‚Ä¢ –ù–∞–ª–∏—á–∏–µ —Ä–µ–º–æ–Ω—Ç–∞\n"
        "‚Ä¢ –î—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏\n\n"
        "–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç', –µ—Å–ª–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–π –Ω–µ—Ç.",
        reply_markup=get_comment_keyboard()
    )

@dp.message(AppraisalForm.comment)
async def handle_comment(message: types.Message, state: FSMContext):
    await state.update_data(comment=message.text)
    await state.set_state(AppraisalForm.contact)
    await message.answer(
        "üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n\n"
        "üë§ –£–∫–∞–∂–∏—Ç–µ –¥–ª—è —Å–≤—è–∑–∏:\n"
        "‚Ä¢ –í–∞—à–µ –∏–º—è\n"
        "‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
        "‚Ä¢ –£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)\n\n"
        "üìù –ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤, +7 (999) 123-45-67, —Å 9:00 –¥–æ 18:00",
        reply_markup=get_contact_keyboard()
    )

@dp.message(AppraisalForm.contact)
async def handle_contact(message: types.Message, state: FSMContext):
    await state.update_data(contact=message.text)
    data = await state.get_data()

    result = (
        f"<b>üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ—Ü–µ–Ω–∫—É:</b>\n"
        f"üè† –û–±—ä–µ–∫—Ç: {data.get('object_type')}\n"
        f"üéØ –¶–µ–ª—å: {data.get('purpose')}\n"
        f"üåç –†–µ–≥–∏–æ–Ω: {data.get('region')}\n"
        f"üìê –ü–ª–æ—â–∞–¥—å: {data.get('area')}\n"
        f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data.get('comment')}\n"
        f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {data.get('contact')}"
    )

    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=result)
    await message.answer(
        "‚úÖ **–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!**\n\n"
        "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ—Ü–µ–Ω–∫—É –ø—Ä–∏–Ω—è—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –Ω–∞—à–∏–º —ç–∫—Å–ø–µ—Ä—Ç–∞–º.\n\n"
        "üìû **–ß—Ç–æ –¥–∞–ª—å—à–µ:**\n"
        "‚Ä¢ –ù–∞—à –æ—Ü–µ–Ω—â–∏–∫ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ–¥–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n"
        "‚Ä¢ –°–æ–≥–ª–∞—Å—É–µ—Ç —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–µ–∑–¥–∞\n"
        "‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –∑–∞ 1 –¥–µ–Ω—å\n\n"
        "üìä **–í–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**\n"
        "‚Ä¢ –ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–µ –æ—Ü–µ–Ω—â–∏–∫–∏ —Å –ª–∏—Ü–µ–Ω–∑–∏–µ–π\n"
        "‚Ä¢ –û—Ç—á–µ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤—Å–µ–º–∏ –±–∞–Ω–∫–∞–º–∏\n"
        "‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ –æ—Ü–µ–Ω–∫–∏\n"
        "‚Ä¢ –í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã –∏ –±—ã—Å—Ç—Ä—ã–µ —Å—Ä–æ–∫–∏\n\n"
        "üè¢ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è —Ç–æ—á–Ω–æ–π –∏ —á–µ—Å—Ç–Ω–æ–π –æ—Ü–µ–Ω–∫–∏!",
        reply_markup=get_object_keyboard()
    )
    await state.clear()

async def main():
    await dp.start_polling(bot, skip_updates=True)

if __name__ == '__main__':
    asyncio.run(main())
