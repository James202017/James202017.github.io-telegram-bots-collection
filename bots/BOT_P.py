import logging
import asyncio
import sys
import os
from dotenv import load_dotenv

try:
    import ssl
except ModuleNotFoundError:
    ssl = None
    logging.error("–ú–æ–¥—É–ª—å SSL –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ OpenSSL –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ.")

from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv('BOT_TOKEN_P')
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID', '123456789')  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not API_TOKEN:
    raise ValueError("BOT_TOKEN_P –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")

logging.basicConfig(level=logging.INFO)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞
if ssl is None:
    sys.exit("–û—à–∏–±–∫–∞: –ú–æ–¥—É–ª—å SSL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenSSL –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ä–µ–¥—É —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π SSL.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –æ–ø—Ä–æ—Å–Ω–∏–∫–∞
class SaleForm(StatesGroup):
    property_type = State()
    location = State()
    details = State()
    price = State()
    contact = State()

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def get_property_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"""
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="üè† –ö–≤–∞—Ä—Ç–∏—Ä–∞"), KeyboardButton(text="üè° –î–æ–º")],
        [KeyboardButton(text="üèñÔ∏è –î–∞—á–∞"), KeyboardButton(text="üå≥ –£—á–∞—Å—Ç–æ–∫")],
        [KeyboardButton(text="üè¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å")],
        [KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_location_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —ç—Ç–∞–ø–∞ —É–∫–∞–∑–∞–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏"""
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞")],
        [KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_details_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —ç—Ç–∞–ø–∞ —É–∫–∞–∑–∞–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π"""
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –ª–æ–∫–∞—Ü–∏–∏")],
        [KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_price_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —ç—Ç–∞–ø–∞ —É–∫–∞–∑–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞"""
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="üí∞ –î–æ 3 –º–ª–Ω"), KeyboardButton(text="üí∞ 3-5 –º–ª–Ω")],
        [KeyboardButton(text="üí∞ 5-10 –º–ª–Ω"), KeyboardButton(text="üí∞ –°–≤—ã—à–µ 10 –º–ª–Ω")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –¥–µ—Ç–∞–ª—è–º")],
        [KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

def get_contact_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —ç—Ç–∞–ø–∞ —É–∫–∞–∑–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –±—é–¥–∂–µ—Ç—É")],
        [KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
    ])

@dp.message(Command('start'))
async def start(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä start –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    start_param = message.text.split()[1] if len(message.text.split()) > 1 else ''
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    if start_param == 'pokupka':
        welcome_msg = (
            "üè† <b>–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–µ—Ä–µ—à–ª–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –ø–æ–∫—É–ø–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ!</b>\n\n"
            "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏!</b>\n\n"
            "üíº <b>–ú—ã –ø–æ–º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π –º–µ—á—Ç—ã!</b>\n\n"
            "‚ú® <b>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
            "üîç –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥–±–æ—Ä –æ–±—ä–µ–∫—Ç–æ–≤\n"
            "üí∞ –õ—É—á—à–∏–µ —Ü–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ\n"
            "üìã –ü–æ–ª–Ω–æ–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ\n"
            "‚ö° –ë—ã—Å—Ç—Ä–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏\n"
            "üèÜ –ì–∞—Ä–∞–Ω—Ç–∏—è —á–∏—Å—Ç–æ—Ç—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n\n"
            "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω—è–π—Ç–µ –≤—Å–µ –ø–æ–ª—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ, "
            "—á—Ç–æ–±—ã –Ω–∞—à–∏ <b>—ç–∫—Å–ø–µ—Ä—Ç—ã-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã</b> –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã! üéØ"
        )
    else:
        welcome_msg = (
            "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏!</b>\n\n"
            "üíº <b>–ú—ã –ø–æ–º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π –º–µ—á—Ç—ã!</b>\n\n"
            "‚ú® <b>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
            "üîç –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥–±–æ—Ä –æ–±—ä–µ–∫—Ç–æ–≤\n"
            "üí∞ –õ—É—á—à–∏–µ —Ü–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ\n"
            "üìã –ü–æ–ª–Ω–æ–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ\n"
            "‚ö° –ë—ã—Å—Ç—Ä–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏\n"
            "üèÜ –ì–∞—Ä–∞–Ω—Ç–∏—è —á–∏—Å—Ç–æ—Ç—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n\n"
            "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω—è–π—Ç–µ –≤—Å–µ –ø–æ–ª—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ, "
            "—á—Ç–æ–±—ã –Ω–∞—à–∏ <b>—ç–∫—Å–ø–µ—Ä—Ç—ã-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã</b> –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã! üéØ"
        )
    
    await message.answer(welcome_msg)
    await message.answer(
        "üè† <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏:</b>", 
        reply_markup=get_property_keyboard()
    )
    await state.set_state(SaleForm.property_type)

@dp.message(F.text.in_(["üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞", "üîô –ù–∞–∑–∞–¥ –∫ –ª–æ–∫–∞—Ü–∏–∏", "üîô –ù–∞–∑–∞–¥ –∫ –¥–µ—Ç–∞–ª—è–º", "üîô –ù–∞–∑–∞–¥ –∫ –±—é–¥–∂–µ—Ç—É", "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"]))
async def navigation_handler(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await state.set_state(SaleForm.property_type)
        await message.answer(
            "üîÑ <b>–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ!</b>\n\nüè† <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b>",
            reply_markup=get_property_keyboard()
        )
    elif message.text == "üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞":
        await state.set_state(SaleForm.property_type)
        await message.answer(
            "üè† <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b>",
            reply_markup=get_property_keyboard()
        )
    elif message.text == "üîô –ù–∞–∑–∞–¥ –∫ –ª–æ–∫–∞—Ü–∏–∏":
        await state.set_state(SaleForm.location)
        await message.answer(
            "üìç <b>–£–∫–∞–∂–∏—Ç–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç, —Ä–∞–π–æ–Ω, –∫–∞–∫–∏–µ –µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b>",
            reply_markup=get_location_keyboard()
        )
    elif message.text == "üîô –ù–∞–∑–∞–¥ –∫ –¥–µ—Ç–∞–ª—è–º":
        await state.set_state(SaleForm.details)
        await message.answer(
            "üìê <b>–£–∫–∞–∂–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b>\n\nüìè –ú–µ—Ç—Ä–∞–∂\nüè† –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç\n‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è",
            reply_markup=get_details_keyboard()
        )
    elif message.text == "üîô –ù–∞–∑–∞–¥ –∫ –±—é–¥–∂–µ—Ç—É":
        await state.set_state(SaleForm.price)
        await message.answer(
            "üí∞ <b>–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –±—é–¥–∂–µ—Ç:</b>\n\nüíµ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é —Å—É–º–º—É:",
            reply_markup=get_price_keyboard()
        )

@dp.message(SaleForm.property_type)
async def process_type(message: types.Message, state: FSMContext):
    await state.update_data(property_type=message.text)
    await state.set_state(SaleForm.location)
    await message.answer(
        "üìç <b>–£–∫–∞–∂–∏—Ç–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç, —Ä–∞–π–æ–Ω, –∫–∞–∫–∏–µ –µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b>",
        reply_markup=get_location_keyboard()
    )

@dp.message(SaleForm.location)
async def process_location(message: types.Message, state: FSMContext):
    await state.update_data(location=message.text)
    await state.set_state(SaleForm.details)
    await message.answer(
        "üìê <b>–£–∫–∞–∂–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b>\n\nüìè –ú–µ—Ç—Ä–∞–∂\nüè† –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç\n‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è",
        reply_markup=get_details_keyboard()
    )

@dp.message(SaleForm.details)
async def process_details(message: types.Message, state: FSMContext):
    await state.update_data(details=message.text)
    await state.set_state(SaleForm.price)
    await message.answer(
        "üí∞ <b>–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –±—é–¥–∂–µ—Ç:</b>\n\nüíµ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é —Å—É–º–º—É:",
        reply_markup=get_price_keyboard()
    )

@dp.message(SaleForm.price)
async def process_price(message: types.Message, state: FSMContext):
    await state.update_data(price=message.text)
    await state.set_state(SaleForm.contact)
    await message.answer(
        "üìû <b>–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</b>\n\nüì± –¢–µ–ª–µ—Ñ–æ–Ω\nüë§ –ò–º—è\nüìß Email (–ø–æ –∂–µ–ª–∞–Ω–∏—é)",
        reply_markup=get_contact_keyboard()
    )

@dp.message(SaleForm.contact)
async def process_contact(message: types.Message, state: FSMContext):
    await state.update_data(contact=message.text)
    
    data = await state.get_data()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
    admin_message = f"""üè† <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏</b>

üìã <b>–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b> {data['property_type']}
üìç <b>–õ–æ–∫–∞—Ü–∏—è:</b> {data['location']}
üìê <b>–î–µ—Ç–∞–ª–∏:</b> {data['details']}
üí∞ <b>–ë—é–¥–∂–µ—Ç:</b> {data['price']}
üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b> {data['contact']}

üë§ <b>–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> @{message.from_user.username or '–ë–µ–∑ username'} (ID: {message.from_user.id})"""
    
    await bot.send_message(ADMIN_CHAT_ID, admin_message)
    
    await message.answer(
        "‚úÖ <b>–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.</b>\n\nüìû –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        reply_markup=get_property_keyboard()
    )
    await state.clear()

async def main():
    await dp.start_polling(bot, skip_updates=True)

if __name__ == '__main__':
    asyncio.run(main())
